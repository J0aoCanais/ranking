# Workflow para deploy no GitHub Pages
name: Deploy to GitHub Pages

on:
  # Executa no push para a branch main
  push:
    branches: [ main ]
  
  # Permite executar manualmente
  workflow_dispatch:

# Define permissões necessárias para o GITHUB_TOKEN
permissions:
  contents: read
  pages: write
  id-token: write

# Permite apenas um deploy concorrente
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de build
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup production environment
        run: |
          if [ -f .env.production ]; then
            cp .env.production .env
            echo "✅ Environment variables loaded from .env.production"
            cat .env
          else
            echo "⚠️ No .env.production file found"
          fi
        
      - name: Build
        run: npm run build
        env:
          VITE_BACKEND_URL: https://japcanais.pythonanywhere.com/
        
      - name: Copy CNAME to dist
        run: |
          if [ -f ../CNAME ]; then
            cp ../CNAME dist/CNAME
            echo "✅ CNAME copied to dist/"
          fi
        
      - name: Copy additional files to dist
        run: |
          # Assegurar que os arquivos de redirecionamento estão presentes
          if [ ! -f dist/404.html ]; then
            echo "⚠️ 404.html not found in dist, copying from public"
            cp public/404.html dist/404.html 2>/dev/null || echo "No 404.html in public"
          fi
          
          # Verificar se os arquivos essenciais estão presentes
          echo "📁 Files in dist:"
          ls -la dist/
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/dist

  # Job de deploy
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
